language: minimal

services:
  - docker

# branches:
#   only:
#   - master

env:
  - DOCKER_COMPOSE_VERSION=1.25.5

# Scripts to be run such as tests
before_install:
  - docker -v && docker-compose -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - mkdir ${HOME}/.kube
  - echo "$KUBE_CONFIG" | base64 --decode > ${HOME}/.kube/config # include to travis console env variable :cat ${HOME}/.kube/config | base64 | pbcopy
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

install:
  - docker-compose -f docker-compose-build.yml build --parallel
  - docker-compose -f ./docker-compose-build.yml push 

script:
  - kubectl get pods
  - kubectl set image deployments/api-feed api-feed=michaels/udagram-api-feed:latest
  - kubectl set image deployments/api-user api-user=michaels/udagram-api--user:latest
  - kubectl set image deployments/frontend frontend=michaels/udagram-frontend:latest
  - kubectl set image deployments/reverse-proxy reverse-proxy=michaels/reverse-proxy:latest

  